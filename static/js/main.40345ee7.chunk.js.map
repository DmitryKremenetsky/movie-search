{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/MovieList/MovieList.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","searchQuery","setSearchQuery","setMovies","className","type","placeholder","value","debounceTimeout","onChange","event","target","icon","faBackspace","onClick","MovieList","movies","useState","isLoading","setIsLoading","getMovieRequest","a","url","fetch","response","json","useEffect","length","then","Search","catch","map","movie","src","Poster","alt","imdbID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSA8BeA,MAzBf,YAAgE,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,UAOhD,OACE,sBAAKC,UAAU,aAAf,UACE,cAAC,gBAAD,CACEC,KAAK,OACLC,YAAY,YACZC,MAAON,EACPO,gBAAiB,IACjBC,SAbW,SAACC,GAAD,OAAWR,EAAeQ,EAAMC,OAAOJ,UAepD,cAAC,IAAD,CACEH,UAAU,iBACVQ,KAAMC,IACNC,QAjBU,WACdZ,EAAe,IACfC,EAAU,W,wBC6BCY,G,MAnCG,SAAC,GAAwC,IAAtCd,EAAqC,EAArCA,YAAae,EAAwB,EAAxBA,OAAQb,EAAgB,EAAhBA,UAAgB,EACtBc,oBAAS,GADa,mBACjDC,EADiD,KACtCC,EADsC,KAGlDC,EAAe,uCAAG,WAAOnB,GAAP,iBAAAoB,EAAA,6DAChBC,EADgB,qDACoCrB,GADpC,SAECsB,MAAMD,GAFP,cAEhBE,EAFgB,gBAGTA,EAASC,OAHA,mFAAH,sDAmBrB,OAbAC,qBAAU,WACJzB,EAAY0B,OAAS,IAEzBR,GAAa,GAEbC,EAAgBnB,GACb2B,MAAK,SAACJ,GACLrB,EAAUqB,EAASK,QAAU,IAC7BV,GAAa,MAEdW,OAAM,kBAAMX,GAAa,SAC3B,CAAClB,IAEAiB,EAAkB,qBAAKd,UAAU,UAAf,wBAGpB,qBAAKA,UAAU,SAAf,SACGY,EAAOe,KAAI,SAACC,GAAD,OACV,qBAAK5B,UAAU,QAAf,SACE,qBAAK6B,IAAKD,EAAME,OAAQC,IAAI,WADFH,EAAMI,e,MCN3BC,MApBf,WAAgB,IAAD,EACepB,mBAAS,IADxB,mBACND,EADM,KACEb,EADF,OAEyBc,mBAAS,IAFlC,mBAENhB,EAFM,KAEOC,EAFP,KAIb,OACE,iCACE,cAAC,EAAD,CACED,YAAaA,EACbC,eAAgBA,EAChBC,UAAWA,IAEb,cAAC,EAAD,CACEa,OAAQA,EACRb,UAAWA,EACXF,YAAaA,QCJNqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1BZ,M","file":"static/js/main.40345ee7.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport { DebounceInput } from 'react-debounce-input';\nimport \"./styles.scss\";\n\nfunction SearchBar({ searchQuery, setSearchQuery, setMovies }) {\n  const onChange = (event) => setSearchQuery(event.target.value);\n  const onClear = () => {\n    setSearchQuery('')\n    setMovies([])\n  }\n\n  return (\n    <div className=\"search-bar\">\n      <DebounceInput\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        debounceTimeout={300}\n        onChange={onChange}\n      />\n      <FontAwesomeIcon\n        className=\"backspace-icon\"\n        icon={faBackspace}\n        onClick={onClear}\n      />\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import { useEffect, useState } from \"react\";\nimport \"./styles.scss\";\n\nconst MovieList = ({ searchQuery, movies, setMovies }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getMovieRequest = async (searchQuery) => {\n    const url = `https://www.omdbapi.com/?apikey=35def29d&s=${searchQuery}`;\n    const response = await fetch(url);\n    return await response.json();\n  };\n\n  useEffect(() => {\n    if (searchQuery.length < 3) return;\n\n    setIsLoading(true);\n\n    getMovieRequest(searchQuery)\n      .then((response) => {\n        setMovies(response.Search || []);\n        setIsLoading(false);\n      })\n      .catch(() => setIsLoading(false));\n  }, [searchQuery]);\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n\n  return (\n    <div className=\"movies\">\n      {movies.map((movie) => (\n        <div className=\"movie\" key={movie.imdbID}>\n          <img src={movie.Poster} alt=\"movie\" />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import { useState } from \"react\";\nimport { MovieList, SearchBar } from \"./components\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  return (\n    <main>\n      <SearchBar\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        setMovies={setMovies}\n      />\n      <MovieList\n        movies={movies}\n        setMovies={setMovies}\n        searchQuery={searchQuery}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}